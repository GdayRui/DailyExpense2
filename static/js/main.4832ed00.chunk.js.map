{"version":3,"sources":["Images/Avatar-01.svg","Components/Login.jsx","Components/Header.jsx","Components/Footer.jsx","Components/ExpenseList.jsx","Services/expenseService.js","Components/Filter.jsx","Components/ExpenseForm.jsx","Components/QuickSearch.jsx","Components/DeleteRecords.jsx","Components/User.jsx","Components/MainPage.jsx","Components/Logo.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","state","username","password","error","redirect","handlePassChange","bind","handleUserChange","handleSubmit","dismissError","this","setState","evt","preventDefault","target","id","value","to","className","onSubmit","data-test","onClick","htmlFor","type","onChange","React","Component","ExpenseList","props","handleSelected","i","data","length","tmpData","isSelected","onToggleSelect","handleSort","sort","a","b","ascending","amount","itemA","description","toUpperCase","itemB","comparison","commentA","comments","commentB","categoryA","categoryName","categoryB","dateA","Date","dateTime","dateB","sortingColumn","storageKey","listJsx","map","item","dt","key","getFullYear","getMonth","getDate","icon","faCheckCircle","loadingRow","colSpan","faSpinner","faCaretUp","isLoading","baseUrl","expenseService","getAllExpense","fetch","getCategories","filterExpense","filterObj","method","headers","body","JSON","stringify","deleteExpense","idList","addNew","newRecord","Filter","handleApplyFilter","onFilterBegin","newFilterObj","categoryIDs","categories","filter","isCategorySelected","then","resp","json","filterResult","onFilterResult","handleResetFilter","startDate","endDate","minAmount","maxAmount","setTimeout","handleInputChange","e","handleClickCategory","innerText","placeholder","ExpenseForm","onSubmitForm","r","Amount","Description","isError","CategoryName","document","getElementById","onAddNewRecord","reset","DateTime","Comments","Id","category","categoryNames","ele","QuickSearch","onQuickSearch","userInput","quickSearchResult","indexOf","toString","console","log","faSearch","onDelete","numSelectedRecords","disabled","User","userName","src","Avatar","alt","MainPage","handleDelete","expenseList","modifiedData","addFlagToList","handleQuickSearch","dataList","handleFilterBegin","handleFilterResult","handleAddNewRecord","addedRecord","list","push","handleToggleSelect","DeleteRecords","App","basename","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,uC,uWCiH5BC,E,YA5Gb,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,SAAU,cACVC,SAAU,UACVC,MAAO,GACPC,SAAU,IAGZ,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBAZR,E,4EAgBZI,KAAKC,SAAS,CAAER,MAAO,O,mCAGZS,GAGX,OAFAA,EAAIC,iBAECH,KAAKV,MAAMC,SAIXS,KAAKV,MAAME,SAITQ,KAAKC,SAAS,CAAER,MAAO,GAAKC,SAAU,aAHpCM,KAAKC,SAAS,CAAER,MAAO,yBAJvBO,KAAKC,SAAS,CAAER,MAAO,2B,uCAUjBS,GAEf,OAAQA,EAAIE,OAAOC,IACjB,IAAK,WACHL,KAAKC,SAAS,CACZV,SAAUW,EAAIE,OAAOE,QAEvB,MAEF,IAAK,WACHN,KAAKC,SAAS,CACZT,SAAUU,EAAIE,OAAOE,W,uCAUZJ,GACfF,KAAKC,SAAS,CACZT,SAAUU,EAAIE,OAAOE,U,+BAKvB,OAAIN,KAAKV,MAAMI,SACN,kBAAC,IAAD,CAAUa,GAAIP,KAAKV,MAAMI,WAI9B,yBAAKc,UAAU,SACb,yBAAKH,GAAG,kBACN,0BAAMA,GAAG,aAAaI,SAAUT,KAAKF,cAClCE,KAAKV,MAAMG,OACV,wBAAIiB,YAAU,QAAQC,QAASX,KAAKD,cAClC,4BAAQY,QAASX,KAAKD,cAAtB,UACCC,KAAKV,MAAMG,OAGhB,6BACE,2BAAOmB,QAAQ,YAAf,aACA,2BACEP,GAAG,WACHQ,KAAK,OACLH,YAAU,WACVJ,MAAON,KAAKV,MAAMC,SAClBuB,SAAUd,KAAKH,oBAInB,6BACE,2BAAOe,QAAQ,YAAf,YACA,2BACEP,GAAG,WACHQ,KAAK,WACLH,YAAU,WACVJ,MAAON,KAAKV,MAAME,SAClBsB,SAAUd,KAAKL,oBAInB,6BACE,2BAAOkB,KAAK,SAASL,UAAU,YAAYF,MAAM,QAAQI,YAAU,mB,GAnG/DK,IAAMC,W,GCDLD,IAAMC,UCAND,IAAMC,U,aCiOZC,E,YA1Nb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAgBRC,eAAiB,SAAAd,GACf,IAAK,IAAIe,EAAI,EAAGA,EAAI,EAAK9B,MAAM+B,KAAKC,OAAQF,IAC1C,GAAIf,IAAO,EAAKf,MAAM+B,KAAKD,GAAGf,GAAI,CAChC,IAAIkB,EAAU,EAAKjC,MAAM+B,KASzB,OAPAE,EAAQH,GAAGI,YAAcD,EAAQH,GAAGI,WAEpC,EAAKvB,SAAS,CACZoB,KAAME,SAGR,EAAKL,MAAMO,eAAeF,EAAQH,GAAGI,cA5BxB,EAmCnBE,WAAa,SAAAb,GAwDX,OAAQA,GACN,IAAK,SACH,EAAKvB,MAAM+B,KAAKM,MA1CE,SAACC,EAAGC,GACxB,OAAO,EAAKvC,MAAMwC,UAAYF,EAAEG,OAASF,EAAEE,OAASF,EAAEE,OAASH,EAAEG,UA0C/D,MACF,IAAK,OACH,EAAKzC,MAAM+B,KAAKM,MA3DA,SAACC,EAAGC,GACtB,IAAMG,EAAQJ,EAAEK,YAAYC,cACtBC,EAAQN,EAAEI,YAAYC,cAGxBE,EAAa,EAMjB,OALIJ,EAAQG,EACcC,EAAxB,EAAK9C,MAAMwC,UAA0B,GAAoB,EAChDE,EAAQG,IACOC,EAAxB,EAAK9C,MAAMwC,WAA2B,EAAmB,GAEpDM,KAiDL,MACF,IAAK,UACH,EAAK9C,MAAM+B,KAAKM,MA5CG,SAACC,EAAGC,GACzB,IAAMQ,EAAWT,EAAEU,SAASJ,cACtBK,EAAWV,EAAES,SAASJ,cACxBE,EAAa,EAMjB,OALIC,EAAWE,EACWH,EAAxB,EAAK9C,MAAMwC,UAA0B,GAAoB,EAChDO,EAAWE,IACIH,EAAxB,EAAK9C,MAAMwC,WAA2B,EAAmB,GAEpDM,KAoCL,MACF,IAAK,WACH,EAAK9C,MAAM+B,KAAKM,MAnCI,SAACC,EAAGC,GAC1B,IAAMW,EAAYZ,EAAEa,aAAaP,cAC3BQ,EAAYb,EAAEY,aAAaP,cAC7BE,EAAa,EAMjB,OALII,EAAYE,EACUN,EAAxB,EAAK9C,MAAMwC,UAA0B,GAAoB,EAChDU,EAAYE,IACGN,EAAxB,EAAK9C,MAAMwC,WAA2B,EAAmB,GAEpDM,KA2BL,MACF,IAAK,OACH,EAAK9C,MAAM+B,KAAKM,MA1BA,SAACC,EAAGC,GACtB,IAAMc,EAAQ,IAAIC,KAAKhB,EAAEiB,UACnBC,EAAQ,IAAIF,KAAKf,EAAEgB,UACrBT,EAAa,EAMjB,OALIO,EAAQG,EACcV,EAAxB,EAAK9C,MAAMwC,UAA0B,GAAoB,EAChDa,EAAQG,IACOV,EAAxB,EAAK9C,MAAMwC,WAA2B,EAAmB,GAEpDM,KAuBT,EAAKnC,SAAS,CACZ8C,cAAelC,EACfiB,WAAY,EAAKxC,MAAMwC,aA/GzB,EAAKxC,MAAQ,CACXwC,WAAW,EACXT,KAAM,GACN2B,WAAY,cACZD,cAAe,IANA,E,sEAqHT,IAAD,OACHE,EAAUjD,KAAKV,MAAM+B,KAAK6B,KAAI,SAAAC,GAChC,IAAIC,EAAK,IAAIR,KAAKO,EAAKN,UAEvB,OACE,wBAAIQ,IAAKF,EAAK9C,GAAIM,QAAS,kBAAM,EAAKQ,eAAegC,EAAK9C,MACxD,sCAAQ+C,EAAGE,cAAX,YACEF,EAAGG,WAAa,EAAI,GAAK,KAD3B,OAEGH,EAAGG,WAAa,EAFnB,YAGEH,EAAGI,UAAY,GAAK,GAAK,KAH3B,OAIGJ,EAAGI,YACN,4BAAKL,EAAKlB,aACV,4BAAKkB,EAAKpB,QACV,4BAAKoB,EAAKV,cACV,4BAAKU,EAAKb,UACTa,EAAK3B,WACJ,4BACE,kBAAC,IAAD,CAAiBiC,KAAMC,OAGzB,iCAMJC,EACF,4BACE,wBAAIC,QAAQ,IAAIpD,UAAU,WACxB,kBAAC,IAAD,CACEA,UAAU,0BACViD,KAAMI,QAKd,OACE,yBAAKrD,UAAU,iBACb,+BACE,+BACE,4BACE,wBAAIA,UAAU,UAAUG,QAAS,kBAAM,EAAKe,WAAW,UAAvD,OACO,IACyB,SAA7B1B,KAAKV,MAAMyD,gBACT/C,KAAKV,MAAMwC,UACV,kBAAC,IAAD,CAAiB2B,KAAMK,MAEvB,kBAAC,IAAD,CAAiBtD,UAAU,cAAciD,KAAMK,QAGrD,wBAAInD,QAAS,kBAAM,EAAKe,WAAW,UAAnC,OACO,IACyB,SAA7B1B,KAAKV,MAAMyD,gBACT/C,KAAKV,MAAMwC,UACV,kBAAC,IAAD,CAAiB2B,KAAMK,MAEvB,kBAAC,IAAD,CAAiBtD,UAAU,cAAciD,KAAMK,QAGrD,wBAAInD,QAAS,kBAAM,EAAKe,WAAW,YAAnC,SACS,IACuB,WAA7B1B,KAAKV,MAAMyD,gBACT/C,KAAKV,MAAMwC,UACV,kBAAC,IAAD,CAAiB2B,KAAMK,MAEvB,kBAAC,IAAD,CAAiBtD,UAAU,cAAciD,KAAMK,QAGrD,wBAAInD,QAAS,kBAAM,EAAKe,WAAW,cAAnC,WACW,IACqB,aAA7B1B,KAAKV,MAAMyD,gBACT/C,KAAKV,MAAMwC,UACV,kBAAC,IAAD,CAAiB2B,KAAMK,MAEvB,kBAAC,IAAD,CAAiBtD,UAAU,cAAciD,KAAMK,QAGrD,wBAAInD,QAAS,kBAAM,EAAKe,WAAW,aAAnC,UACU,IACsB,YAA7B1B,KAAKV,MAAMyD,gBACT/C,KAAKV,MAAMwC,UACV,kBAAC,IAAD,CAAiB2B,KAAMK,MAEvB,kBAAC,IAAD,CAAiBtD,UAAU,cAAciD,KAAMK,QAGrD,wBAAItD,UAAU,wBAGlB,+BACIR,KAAKkB,MAAM6C,UAAsBJ,EAAVV,EACzB,4BACE,wBAAIW,QAAQ,IAAIpD,UAAU,wB,gDAtMNU,EAAO5B,GAErC,MAAO,CAAE+B,KAAMH,EAAMG,U,GAdCN,IAAMC,WCT1BgD,EAAU,mEA0BDC,EAxBM,CACjBC,cAAe,kBAAKC,MAAMH,EAAU,YAEpCI,cAAe,kBAAKD,MAAMH,EAAU,uBAEpCK,cAAe,SAACC,GAAD,OAAcH,MAAMH,EAAU,iBAAkB,CAC3DO,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUL,MAGzBM,cAAe,SAACC,GAAD,OAAWV,MAAMH,EAAU,iBAAkB,CACxDO,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUE,MAGzBC,OAAQ,SAACC,GAAD,OAAeZ,MAAMH,EAAU,UAAW,CAC9CO,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUI,OCwKdC,E,YA1Lb,WAAY9D,GAAQ,IAAD,8BACjB,4CAAMA,KAaR+D,kBAAoB,WAElB,EAAK/D,MAAMgE,gBAEX,IAAMC,EAAe,EAAK7F,MAAMgF,UAEhCa,EAAaC,YAAc,EAAK9F,MAAM+F,WACnCC,QAAO,SAAAnC,GAAI,OAAIA,EAAKoC,sBACpBrC,KAAI,SAAAC,GAAI,OAAIA,EAAK9C,MAEpB,EAAKJ,SAAS,CACZqE,UAAWa,IAGblB,EACGI,cAAc,EAAK/E,MAAMgF,WACzBkB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACJ,EAAKzE,MAAM0E,eAAeD,OAhCb,EAoCnBE,kBAAoB,WAElB,IAAgCR,EAMhC,EAAKpF,SAAS,CACZqE,UAAW,CACTwB,UAAW,GACXC,QAAS,GACTX,YAAa,GACbY,UAAW,EACXC,UAAW,OAEbZ,YAd8BA,EAcM,EAAK/F,MAAM+F,WAbxCA,EAAWnC,KAAI,SAAAC,GACpBA,EAAKoC,oBAAqB,QAe9BW,YAAW,WACT,EAAKjB,sBACJ,IAzDc,EA4DnBkB,kBAAoB,SAAAC,GAClB,IAAI9B,EAAY,EAAKhF,MAAMgF,UAC3B,OAAQ8B,EAAEhG,OAAOC,IACf,IAAK,aACHiE,EAAUwB,UAAYM,EAAEhG,OAAOE,MAC/B,MACF,IAAK,WACHgE,EAAUyB,QAAUK,EAAEhG,OAAOE,MAC7B,MACF,IAAK,aACHgE,EAAU0B,UAAYI,EAAEhG,OAAOE,MAC/B,MACF,IAAK,aACHgE,EAAU2B,UAAYG,EAAEhG,OAAOE,QAzElB,EAiFnB+F,oBAAsB,SAAAD,GAIpB,IAHA,IAAM3D,EAAe2D,EAAEhG,OAAOkG,UACxBjB,EAAa,EAAK/F,MAAM+F,WAErBjE,EAAI,EAAGA,EAAIiE,EAAW/D,OAAQF,IACrC,GAAIqB,IAAiB4C,EAAWjE,GAAGqB,aAAc,CAC/C4C,EAAWjE,GAAGmE,oBAAsBF,EAAWjE,GAAGmE,mBAClD,EAAKtF,SAAS,CACZoF,WAAYA,IAEd,QAzFJ,EAAK/F,MAAQ,CACXgF,UAAW,CACTwB,UAAW,GACXC,QAAS,GACTX,YAAa,GACbY,UAAW,EACXC,UAAW,OAEbZ,WAAY,IAVG,E,sEAoGT,IAAD,OAEHA,EAAarF,KAAKV,MAAM+F,WAAWnC,KAAI,SAAAC,GACzC,OAAIA,EAAKoC,mBAEL,yBACE/E,UAAU,oBACV6C,IAAKF,EAAK9C,GACVM,QAAS,EAAK0F,qBAEblD,EAAKV,cAKV,yBAAKjC,UAAU,GAAG6C,IAAKF,EAAK9C,GAAIM,QAAS,EAAK0F,qBAC3ClD,EAAKV,iBAKZ,OACE,0BAAMjC,UAAU,UAEd,yBAAKA,UAAU,qBAEb,2BAAOI,QAAQ,cAAf,QACA,2BACEP,GAAG,aACHG,UAAU,eACVK,KAAK,OACLC,SAAUd,KAAKmG,oBAEjB,2BAAOvF,QAAQ,cAAf,MACA,2BACEP,GAAG,WACHG,UAAU,eACVK,KAAK,OACLC,SAAUd,KAAKmG,qBAKnB,yBAAK3F,UAAU,qBAEZ6E,GAIH,yBAAK7E,UAAU,uBAEb,2BACEK,KAAK,OACL0F,YAAY,QACZlG,GAAG,aACHS,SAAUd,KAAKmG,oBAEjB,oCACA,2BACEtF,KAAK,OACL0F,YAAY,QACZlG,GAAG,aACHS,SAAUd,KAAKmG,qBAKnB,yBAAK3F,UAAU,cACb,2BACEK,KAAK,QACLP,MAAM,eACNE,UAAU,mBACVG,QAASX,KAAK6F,oBAEhB,2BACEhF,KAAK,SACLP,MAAM,eACNE,UAAU,mBACVG,QAASX,KAAKiF,yB,gDAlFQ/D,EAAO5B,GACrC,MAAO,CAAE+F,WAAYnE,EAAMmE,gB,GAlGVtE,IAAMC,WCsIZwF,G,kBApIb,WAAYtF,GAAQ,IAAD,8BACjB,4CAAMA,KAeRuF,aAAe,WACb,IAAMC,EAAI,EAAKpH,MAAMyF,UAEN,KAAb2B,EAAEC,QACgB,KAAlBD,EAAEE,YAIF,EAAK3G,SAAS,CAAE4G,SAAS,KAEzBH,EAAEI,aAAeC,SAASC,eAAe,YAAY1G,MACrD,EAAKL,SAAS,CAAE8E,UAAW2B,IAG3B,EAAKxF,MAAM+F,eAAe,EAAK3H,MAAMyF,WAGrCgC,SAASC,eAAe,gBAAgBE,UAjCzB,EAsCnBf,kBAAoB,SAAAC,GAClB,IAAMrB,EAAY,EAAKzF,MAAMyF,UAET,SAAhBqB,EAAEhG,OAAOC,GACX0E,EAAUoC,SAAWf,EAAEhG,OAAOE,MACL,aAAhB8F,EAAEhG,OAAOC,GAClB0E,EAAU+B,aAAeV,EAAEhG,OAAOE,MACT,cAAhB8F,EAAEhG,OAAOC,GAClB0E,EAAU6B,YAAcR,EAAEhG,OAAOE,MACR,WAAhB8F,EAAEhG,OAAOC,GAClB0E,EAAU4B,OAASP,EAAEhG,OAAOE,MACH,aAAhB8F,EAAEhG,OAAOC,KAClB0E,EAAUqC,SAAWhB,EAAEhG,OAAOE,OAGhC,EAAKL,SAAS,CAAE8E,UAAWA,KAnD3B,EAAKzF,MAAQ,CACXyF,UAAW,CACTsC,GAAI,EACJF,SAAU,GACVP,YAAa,GACbD,OAAQ,GACRG,aAAc,GACdM,SAAU,IAEZE,SAAU,GACVT,SAAS,GAZM,E,sEA0DjB,IAAMU,EAAgBvH,KAAKkB,MAAMmE,WAAWnC,KAAI,SAAAsE,GAC9C,OAAO,4BAAQnE,IAAKmE,EAAInH,IAAKmH,EAAI/E,iBAInC,OACE,yBAAKjC,UAAU,gBACb,0BAAMH,GAAG,gBACP,yBAAKG,UAAU,cACb,2BACEH,GAAG,OACHG,UAAU,eACVK,KAAK,OACLC,SAAUd,KAAKmG,qBAGnB,yBAAK3F,UAAU,cACb,4BACEH,GAAG,WACHG,UAAU,eACVM,SAAUd,KAAKmG,mBAEdoB,IASL,yBAAK/G,UAAU,cACb,2BACEH,GAAG,YACHG,UAAU,eACVK,KAAK,OACL0F,YAAY,YACZzF,SAAUd,KAAKmG,qBAGnB,yBAAK3F,UAAU,cACb,2BACEH,GAAG,SACHG,UAAU,eACVK,KAAK,SACL0F,YAAY,SACZzF,SAAUd,KAAKmG,qBAGnB,yBAAK3F,UAAU,cACb,2BACEH,GAAG,WACHG,UAAU,eACVK,KAAK,OACL0F,YAAY,WACZzF,SAAUd,KAAKmG,qBAKnB,yBAAK3F,UAAU,cACb,2BACEA,UAAU,kBACVK,KAAK,SACLP,MAAM,SACNK,QAASX,KAAKyG,sB,GA5HF1F,IAAMC,YCuCjByG,G,kBArCb,WAAYvG,GAAQ,IAAD,8BACjB,4CAAMA,KAYRwG,cAAgB,SAAAtB,GAEd,IAAIuB,EAAYvB,EAAEhG,OAAOE,MAAM4B,cAM3B0F,EAAoB,EAAKtI,MAAM+B,KAAKiE,QALvB,SAAAnC,GAAI,OACnBA,EAAKlB,YAAYC,cAAc2F,QAAQF,IAAc,GACrDxE,EAAKpB,OAAO+F,WAAWD,QAAQF,IAAc,GAC7CxE,EAAKV,aAAaP,cAAc2F,QAAQF,IAAc,KAIxD,EAAKzG,MAAMwG,cAAcE,GACzBG,QAAQC,IAAI,gBAtBZ,EAAK1I,MAAQ,CACX+B,KAAM,IAHS,E,sEA2BT,IAAD,OACP,OACE,yBAAKb,UAAU,gBACb,kBAAC,IAAD,CAAiBiD,KAAMwE,IAAUzH,UAAU,gBAC3C,2BAAOK,KAAK,OAAOC,SAAU,SAAAsF,GAAC,OAAI,EAAKsB,cAActB,U,gDAvB3BlF,EAAO5B,GACrC,MAAO,CAAE+B,KAAMH,EAAMG,U,GAVCN,IAAMC,YCmBjB3B,G,kBApBb,WAAY6B,GAAQ,IAAD,8BACjB,4CAAMA,KACD5B,MAAQ,GAFI,E,sEAMjB,OACE,yBAAKkB,UAAU,kBACb,2BACEK,KAAK,SACLF,QAASX,KAAKkB,MAAMgH,SAEpB5H,MAAK,iBAAYN,KAAKkB,MAAMiH,mBAAvB,YACLC,SAA4C,IAAlCpI,KAAKkB,MAAMiH,0B,GAdXpH,IAAMC,Y,yBCoBXqH,E,YAlBb,WAAYnH,GAAQ,IAAD,8BACjB,4CAAMA,KACD5B,MAAQ,CACXgJ,SAAU,OAHK,E,sEAQjB,OACE,yBAAK9H,UAAU,QAEb,yBAAK+H,IAAKC,IAAQC,IAAI,gBACtB,+C,GAbW1H,IAAMC,WC0KV0H,G,MC3KI3H,IAAMC,U,YDSvB,WAAYE,GAAQ,IAAD,8BACjB,4CAAMA,KAWRyH,aAAe,WAEb,IAAM9D,EAAS,EAAKvF,MAAMsJ,YACvBtD,QAAO,SAAAnC,GAAI,OAAIA,EAAK3B,cACpB0B,KAAI,SAAAC,GAAI,OAAIA,EAAK9C,MAEpB4D,EACGW,cAAcC,GACdW,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAnE,GACJ4C,EACGC,gBACAsB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAnE,GACJ,IAAMwH,EAAe,EAAKC,cAAczH,GACxC,EAAKpB,SAAS,CACZ2I,YAAaC,EACbjB,kBAAmBiB,EACnBV,mBAAoB,WA9Bb,EAoCnBY,kBAAoB,SAAAnB,GAClB,EAAK3H,SAAS,CAAE2H,kBAAmBA,KArClB,EAyCnBkB,cAAgB,SAAAE,GACd,OAAOA,EAAS9F,KAAI,SAAAC,GAElB,OADAA,EAAK3B,YAAa,EACX2B,MA5CQ,EAwDnB8F,kBAAoB,SAAA5D,GAClB,EAAKpF,SAAS,CACZ8D,WAAW,KA1DI,EA+DnBmF,mBAAqB,SAAAvD,GAEnB,IAAMkD,EAAe,EAAKC,cAAcnD,GAGxC,EAAK1F,SAAS,CACZ2I,YAAaC,EACbjB,kBAAmBiB,EACnB9E,WAAW,KAvEI,EA2EnBoF,mBAAqB,SAAApE,GACnBd,EACGa,OAAOC,GACPS,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAA4D,GAEJA,EAAY5H,YAAa,EACzB,IAAM6H,EAAO,EAAK/J,MAAMsJ,YACxBS,EAAKC,KAAKF,GAEV,EAAKnJ,SAAS,CAAE2I,YAAaS,EAAMzB,kBAAmByB,QArFzC,EAyFnBE,mBAAqB,SAAA/H,GACnB,EAAKvB,SAAS,CACZkI,mBAAoB3G,EAChB,EAAKlC,MAAM6I,mBAAqB,EAChC,EAAK7I,MAAM6I,mBAAqB,KA3FtC,EAAK7I,MAAQ,CACXsJ,YAAa,GACbhB,kBAAmB,GACnBO,mBAAoB,EACpBpE,WAAW,EACXsB,WAAY,IAPG,E,iFAkGE,IAAD,OAClBpB,EACGC,gBACAsB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAnE,GACJ,IAAMwH,EAAe,EAAKC,cAAczH,GAExC,EAAKpB,SAAS,CACZ2I,YAAaC,EACbjB,kBAAmBiB,EACnB9E,WAAW,OAIjBE,EACGG,gBACAoB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAH,GACJ,EAAKpF,SAAS,CACZoF,WAAYA,S,+BAMlB,OACE,yBAAK7E,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEoF,eAAgB5F,KAAKkJ,mBACrBhE,cAAelF,KAAKiJ,kBACpB5D,WAAYrF,KAAKV,MAAM+F,cAM3B,yBAAK7E,UAAU,QACb,kBAAC,EAAD,CACEyG,eAAgBjH,KAAKmJ,mBACrB9D,WAAYrF,KAAKV,MAAM+F,aAEzB,yBAAK7E,UAAU,gBACb,kBAAC,EAAD,CACEa,KAAMrB,KAAKV,MAAMsJ,YACjBlB,cAAe1H,KAAK+I,oBAEtB,kBAACS,EAAD,CACEtB,SAAUlI,KAAK2I,aACfR,mBAAoBnI,KAAKV,MAAM6I,qBAEjC,kBAAC,EAAD,CACE9G,KAAMrB,KAAKV,MAAMsI,kBACjBnG,eAAgBzB,KAAKuJ,mBACrBxF,UAAW/D,KAAKV,MAAMyE,mB,GA1JbhD,IAAMC,Y,QEkBdyI,MAff,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,yBAAKlJ,UAAU,OAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmJ,KAAK,IAAIC,OAAK,EAACC,UAAWxK,IACjC,kBAAC,IAAD,CAAOsK,KAAK,WAAWE,UAAWnB,QCTxBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASrD,SAASC,eAAe,SD6H3C,kBAAmBqD,WACrBA,UAAUC,cAAcC,MAAM/E,MAAK,SAAAgF,GACjCA,EAAaC,kB","file":"static/js/main.4832ed00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Avatar-01.5a2627ab.svg\";","import React from \"react\";\nimport '../Sass/components/_login.scss';\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"sample_user\",\n      password: \"1234567\",\n      error: \"\",\n      redirect: \"\"\n    };\n\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n  }\n\n  dismissError() {\n    this.setState({ error: \"\" });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n\n    if (!this.state.username) {\n      return this.setState({ error: \"Username is required\" });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: \"Password is required\" });\n    }\n\n    return this.setState({ error: \"\" , redirect: \"/expense\"});\n  }\n\n  handleUserChange(evt) {\n\n    switch (evt.target.id) {\n      case \"username\":\n        this.setState({\n          username: evt.target.value\n        });\n        break;\n\n      case \"password\":\n        this.setState({\n          password: evt.target.value\n        });\n        break;\n\n      default:\n        break;\n    }\n\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    else {\n      return (\n        <div className=\"login\">\n          <div id=\"form-container\">\n            <form id=\"login-form\" onSubmit={this.handleSubmit}>\n              {this.state.error && (\n                <h3 data-test=\"error\" onClick={this.dismissError}>\n                  <button onClick={this.dismissError}>✖</button>\n                  {this.state.error}\n                </h3>\n              )}\n              <div>\n                <label htmlFor=\"username\">User Name</label>\n                <input\n                  id=\"username\"\n                  type=\"text\"\n                  data-test=\"username\"\n                  value={this.state.username}\n                  onChange={this.handleUserChange}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  id=\"password\"\n                  type=\"password\"\n                  data-test=\"password\"\n                  value={this.state.password}\n                  onChange={this.handlePassChange}\n                />\n              </div>\n\n              <div>\n                <input type=\"submit\" className=\"btn-login\" value=\"Login\" data-test=\"submit\" />\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Login;\n","import React from 'react';\n//import './App.css';\n\nclass Header extends React.Component {\n    render() {\n      return <div className='header'>\n          <h2>Daily Expense</h2>\n      </div>\n      ;\n    }\n  }\n\nexport default Header;\n","import React from \"react\";\n//import './App.css';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <h2>Footer</h2>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\n//import '../Sass/components/_ExpenseList.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheckCircle,\n  faCaretUp,\n  faSpinner\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass ExpenseList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ascending: true,\n      data: [],\n      storageKey: \"expenseList\",\n      sortingColumn: \"\"\n    };\n  }\n\n  // If 'data' from MainPage changes, this method is called, ExpenseList component gets updated.\n  static getDerivedStateFromProps(props, state) {\n    // debugger;\n    return { data: props.data };\n  }\n\n  // Toggle select rows\n  handleSelected = id => {\n    for (let i = 0; i < this.state.data.length; i++) {\n      if (id === this.state.data[i].id) {\n        let tmpData = this.state.data;\n\n        tmpData[i].isSelected = !tmpData[i].isSelected;\n\n        this.setState({\n          data: tmpData\n        });\n\n        this.props.onToggleSelect(tmpData[i].isSelected);\n        return;\n      }\n    }\n  };\n\n  // Sort the data each column\n  handleSort = type => {\n    // debugger;\n    const compareItem = (a, b) => {\n      const itemA = a.description.toUpperCase();\n      const itemB = b.description.toUpperCase();\n      // ** cannot compare 2 strings. this compare fn only return 0, 1, -1.\n      // return itemA>itemB?1:-1;\n      let comparison = 0;\n      if (itemA > itemB) {\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\n      } else if (itemA < itemB) {\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\n      }\n      return comparison;\n    };\n\n    const compareAmount = (a, b) => {\n      return this.state.ascending ? a.amount - b.amount : b.amount - a.amount;\n    };\n\n    const compareComment = (a, b) => {\n      const commentA = a.comments.toUpperCase();\n      const commentB = b.comments.toUpperCase();\n      let comparison = 0;\n      if (commentA > commentB) {\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\n      } else if (commentA < commentB) {\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\n      }\n      return comparison;\n    };\n\n    const compareCategory = (a, b) => {\n      const categoryA = a.categoryName.toUpperCase();\n      const categoryB = b.categoryName.toUpperCase();\n      let comparison = 0;\n      if (categoryA > categoryB) {\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\n      } else if (categoryA < categoryB) {\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\n      }\n      return comparison;\n    };\n\n    const compareDate = (a, b) => {\n      const dateA = new Date(a.dateTime);\n      const dateB = new Date(b.dateTime);\n      let comparison = 0;\n      if (dateA > dateB) {\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\n      } else if (dateA < dateB) {\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\n      }\n      return comparison;\n    };\n\n    switch (type) {\n      case \"Amount\":\n        this.state.data.sort(compareAmount);\n        break;\n      case \"Item\":\n        this.state.data.sort(compareItem);\n        break;\n      case \"Comment\":\n        this.state.data.sort(compareComment);\n        break;\n      case \"Category\":\n        this.state.data.sort(compareCategory);\n        break;\n      case \"Date\":\n        this.state.data.sort(compareDate);\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      sortingColumn: type,\n      ascending: !this.state.ascending\n    });\n  };\n\n  render() {\n    let listJsx = this.state.data.map(item => {\n      let dt = new Date(item.dateTime);\n\n      return (\n        <tr key={item.id} onClick={() => this.handleSelected(item.id)}>\n          <td>{`${dt.getFullYear()}-${\n            dt.getMonth() > 9 ? \"\" : \"0\"\n          }${dt.getMonth() + 1}-${\n            dt.getDate() > 10 ? \"\" : \"0\"\n          }${dt.getDate()}`}</td>\n          <td>{item.description}</td>\n          <td>{item.amount}</td>\n          <td>{item.categoryName}</td>\n          <td>{item.comments}</td>\n          {item.isSelected ? (\n            <td>\n              <FontAwesomeIcon icon={faCheckCircle} />\n            </td>\n          ) : (\n            <td></td>\n          )}\n        </tr>\n      );\n    });\n\n    let loadingRow = (\n      <tr>\n        <td colSpan=\"6\" className=\"loading\">\n          <FontAwesomeIcon\n            className=\"faSpinner fa-spin fa-2x\"\n            icon={faSpinner}\n          />\n        </td>\n      </tr>\n    );\n    return (\n      <div className=\"expense-table\">\n        <table>\n          <thead>\n            <tr>\n              <th className=\"left-th\" onClick={() => this.handleSort(\"Date\")}>\n                Date{\" \"}\n                {this.state.sortingColumn === \"Date\" &&\n                  (this.state.ascending ? (\n                    <FontAwesomeIcon icon={faCaretUp} />\n                  ) : (\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\n                  ))}\n              </th>\n              <th onClick={() => this.handleSort(\"Item\")}>\n                Item{\" \"}\n                {this.state.sortingColumn === \"Item\" &&\n                  (this.state.ascending ? (\n                    <FontAwesomeIcon icon={faCaretUp} />\n                  ) : (\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\n                  ))}\n              </th>\n              <th onClick={() => this.handleSort(\"Amount\")}>\n                Amount{\" \"}\n                {this.state.sortingColumn === \"Amount\" &&\n                  (this.state.ascending ? (\n                    <FontAwesomeIcon icon={faCaretUp} />\n                  ) : (\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\n                  ))}\n              </th>\n              <th onClick={() => this.handleSort(\"Category\")}>\n                Category{\" \"}\n                {this.state.sortingColumn === \"Category\" &&\n                  (this.state.ascending ? (\n                    <FontAwesomeIcon icon={faCaretUp} />\n                  ) : (\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\n                  ))}\n              </th>\n              <th onClick={() => this.handleSort(\"Comment\")}>\n                Comment{\" \"}\n                {this.state.sortingColumn === \"Comment\" &&\n                  (this.state.ascending ? (\n                    <FontAwesomeIcon icon={faCaretUp} />\n                  ) : (\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\n                  ))}\n              </th>\n              <th className=\"Table-th right-th\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {!this.props.isLoading ? listJsx : loadingRow}\n            <tr>\n              <td colSpan=\"6\" className=\"table-footer\"></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ExpenseList;\n","const baseUrl = 'https://lvaw1qhhfi.execute-api.us-east-1.amazonaws.com/Prod/api/';\r\n\r\nlet expenseService = {\r\n    getAllExpense: ()=> fetch(baseUrl + \"Expense\"),\r\n\r\n    getCategories: ()=> fetch(baseUrl + \"Expense/Categories\"),\r\n\r\n    filterExpense: (filterObj)=> fetch(baseUrl + \"Expense/filter\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(filterObj)\r\n      }),\r\n\r\n    deleteExpense: (idList)=> fetch(baseUrl + \"Expense/delete\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(idList)\r\n      }),\r\n\r\n    addNew: (newRecord) => fetch(baseUrl + \"Expense\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newRecord)\r\n      })\r\n}\r\n \r\nexport default expenseService;\r\n","import React from \"react\";\nimport expenseService from \"../Services/expenseService\";\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterObj: {\n        startDate: \"\",\n        endDate: \"\",\n        categoryIDs: [],\n        minAmount: 0,\n        maxAmount: 99999\n      },\n      categories: []\n    };\n  }\n\n  handleApplyFilter = () => {\n    // to inform the main page start to spin\n    this.props.onFilterBegin();\n    // update categoryIDs\n    const newFilterObj = this.state.filterObj;\n\n    newFilterObj.categoryIDs = this.state.categories\n      .filter(item => item.isCategorySelected)\n      .map(item => item.id);\n\n    this.setState({\n      filterObj: newFilterObj\n    });\n\n    expenseService\n      .filterExpense(this.state.filterObj)\n      .then(resp => resp.json())\n      .then(filterResult => {\n        this.props.onFilterResult(filterResult);\n      });\n  };\n\n  handleResetFilter = () => {\n    // reset category flag\n    const resetIsCategorySelected = categories => {\n      return categories.map(item => {\n        item.isCategorySelected = false;\n      });\n    };\n    // reset date, amount, category\n    this.setState({\n      filterObj: {\n        startDate: \"\",\n        endDate: \"\",\n        categoryIDs: [],\n        minAmount: 0,\n        maxAmount: 99999\n      },\n      categories: resetIsCategorySelected(this.state.categories)\n    });\n\n    setTimeout(() => {\n      this.handleApplyFilter();\n    }, 0);\n  };\n\n  handleInputChange = e => {\n    let filterObj = this.state.filterObj;\n    switch (e.target.id) {\n      case \"start-date\":\n        filterObj.startDate = e.target.value;\n        break;\n      case \"end-date\":\n        filterObj.endDate = e.target.value;\n        break;\n      case \"min-amount\":\n        filterObj.minAmount = e.target.value;\n        break;\n      case \"max-amount\":\n        filterObj.maxAmount = e.target.value;\n        break;\n      default:\n        break;\n    }\n  };\n\n  // when click the category div\n  handleClickCategory = e => {\n    const categoryName = e.target.innerText;\n    const categories = this.state.categories;\n    // push the selected categories' ids to 'categoryIDs'\n    for (let i = 0; i < categories.length; i++) {\n      if (categoryName === categories[i].categoryName) {\n        categories[i].isCategorySelected = !categories[i].isCategorySelected;\n        this.setState({\n          categories: categories\n        });\n        break;\n      }\n    }\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    return { categories: props.categories };\n  }\n\n  render() {\n    // filter categories\n    let categories = this.state.categories.map(item => {\n      if (item.isCategorySelected) {\n        return (\n          <div\n            className=\"category-selected\"\n            key={item.id}\n            onClick={this.handleClickCategory}\n          >\n            {item.categoryName}\n          </div>\n        );\n      }\n      return (\n        <div className=\"\" key={item.id} onClick={this.handleClickCategory}>\n          {item.categoryName}\n        </div>\n      );\n    });\n\n    return (\n      <form className=\"filter\">\n        {/* filter by date */}\n        <div className=\"filter-date-range\">\n          {/* <label htmlFor=\"start-date\">Filter By Date</label> */}\n          <label htmlFor=\"start-date\">From</label>\n          <input\n            id=\"start-date\"\n            className=\"form-control\"\n            type=\"date\"\n            onChange={this.handleInputChange}\n          />\n          <label htmlFor=\"start-date\">To</label>\n          <input\n            id=\"end-date\"\n            className=\"form-control\"\n            type=\"date\"\n            onChange={this.handleInputChange}\n          />\n        </div>\n\n        {/* filter by category */}\n        <div className=\"filter-categories\">\n          {/* <label>Filter By Categories</label> */}\n          {categories}\n        </div>\n\n        {/* filter by amount */}\n        <div className=\"filter-amount-range\">\n          {/* <label htmlFor=\"min-amount\">Filter By Amount</label> */}\n          <input\n            type=\"text\"\n            placeholder=\"$ min\"\n            id=\"min-amount\"\n            onChange={this.handleInputChange}\n          />\n          <span>To</span>\n          <input\n            type=\"text\"\n            placeholder=\"$ max\"\n            id=\"max-amount\"\n            onChange={this.handleInputChange}\n          />\n        </div>\n\n        {/* filter btns */}\n        <div className=\"filter-btn\">\n          <input\n            type=\"reset\"\n            value=\"Reset Filter\"\n            className=\"btn-reset-filter\"\n            onClick={this.handleResetFilter}\n          />\n          <input\n            type=\"button\"\n            value=\"Apply Filter\"\n            className=\"btn-apply-filter\"\n            onClick={this.handleApplyFilter}\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Filter;\n","import React from \"react\";\nimport \"../Sass/components/_expense-form.scss\";\nimport expenseService from \"../Services/expenseService\";\n\nclass ExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newRecord: {\n        Id: 0,\n        DateTime: \"\",\n        Description: \"\",\n        Amount: \"\",\n        CategoryName: \"\",\n        Comments: \"\"\n      },\n      category: [],\n      isError: false\n    };\n  }\n\n  onSubmitForm = () => {\n    const r = this.state.newRecord;\n    if (\n      r.Amount === \"\" ||\n      r.Description === \"\"\n      // r.DateTime === \"\" ||\n      // r.CategoryName === \"\"\n    ) {\n      this.setState({ isError: true });\n    } else {\n      r.CategoryName = document.getElementById(\"category\").value;\n      this.setState({ newRecord: r });\n\n      // update newRecord to MainPage\n      this.props.onAddNewRecord(this.state.newRecord);\n\n      // clear inputs once 'Submit' button is clicked\n      document.getElementById(\"expense-form\").reset();\n    }\n  };\n\n  // get value of new record using onChange fn\n  handleInputChange = e => {\n    const newRecord = this.state.newRecord;\n\n    if (e.target.id === \"date\") {\n      newRecord.DateTime = e.target.value;\n    } else if (e.target.id === \"category\") {\n      newRecord.CategoryName = e.target.value;\n    } else if (e.target.id === \"item-name\") {\n      newRecord.Description = e.target.value;\n    } else if (e.target.id === \"amount\") {\n      newRecord.Amount = e.target.value;\n    } else if (e.target.id === \"comments\") {\n      newRecord.Comments = e.target.value;\n    }\n\n    this.setState({ newRecord: newRecord });\n  };\n\n  render() {\n    // Form Category options\n    const categoryNames = this.props.categories.map(ele => {\n      return <option key={ele.id}>{ele.categoryName}</option>;\n    });\n\n    // Form\n    return (\n      <div className=\"expense-form\">\n        <form id=\"expense-form\">\n          <div className=\"form-group\">\n            <input\n              id=\"date\"\n              className=\"form-control\"\n              type=\"date\"\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <select\n              id=\"category\"\n              className=\"form-control\"\n              onChange={this.handleInputChange}\n            >\n              {categoryNames}\n              {/* hard code of categories*/}\n              {/* <option value=\"Grocery\">Grocery</option>\n              <option>Petrol</option>\n              <option>Education</option>\n              <option>Insurance</option>\n              <option>Others</option> */}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <input\n              id=\"item-name\"\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Item Name\"\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              id=\"amount\"\n              className=\"form-control\"\n              type=\"number\"\n              placeholder=\"Amount\"\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              id=\"comments\"\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Comments\"\n              onChange={this.handleInputChange}\n            />\n          </div>\n          {/* Alert when submit without input */}\n          {/* {alertDiv} */}\n          <div className=\"form-group\">\n            <input\n              className=\"btn-add-expense\"\n              type=\"button\"\n              value=\"Submit\"\n              onClick={this.onSubmitForm}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ExpenseForm;\n","import React from \"react\";\nimport \"../Sass/components/_quick-search.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nclass QuickSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  // If 'data' from MainPage changes, this method is called.\n  static getDerivedStateFromProps(props, state) {\n    return { data: props.data };\n  }\n\n  // Quick search\n  onQuickSearch = e => {\n    debugger;\n    var userInput = e.target.value.toUpperCase();\n    const filterFn = item =>\n      item.description.toUpperCase().indexOf(userInput) >= 0 ||\n      item.amount.toString().indexOf(userInput) >= 0 ||\n      item.categoryName.toUpperCase().indexOf(userInput) >= 0;\n\n    let quickSearchResult = this.state.data.filter(filterFn);\n\n    this.props.onQuickSearch(quickSearchResult);\n    console.log(\"search done\");\n  };\n\n  render() {\n    return (\n      <div className=\"quick-search\">\n        <FontAwesomeIcon icon={faSearch} className=\"search-icon\" />\n        <input type=\"text\" onChange={e => this.onQuickSearch(e)} />\n      </div>\n    );\n  }\n}\n\nexport default QuickSearch;\n","import React from \"react\";\nimport \"../Sass/components/_delete-records.scss\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"delete-records\">\n        <input\n          type=\"button\"\n          onClick={this.props.onDelete}\n          // ES6 string\n          value={`Delete ${this.props.numSelectedRecords} Records`}\n          disabled={this.props.numSelectedRecords === 0}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"../Sass/components/_user.scss\";\nimport Avatar from \"../Images/Avatar-01.svg\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"Rui\"\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"user\">\n        {/* <div className=\"user-avatar\"></div> */}\n        <img src={Avatar} alt=\"user-avatar\" />\n        <h2>Hello, Rui</h2>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React from \"react\";\nimport ExpenseList from \"./ExpenseList\";\nimport Filter from \"./Filter\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport QuickSearch from \"./QuickSearch\";\nimport DeleteRecords from \"./DeleteRecords\";\nimport expenseService from \"../Services/expenseService\";\nimport User from \"./User\";\nimport Logo from \"./Logo\";\nimport \"../Sass/main.scss\";\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expenseList: [],\n      quickSearchResult: [],\n      numSelectedRecords: 0,\n      isLoading: true,\n      categories: []\n    };\n  }\n\n  // delete all records that marked as \"selected\"\n  handleDelete = () => {\n    // Find element ids\n    const idList = this.state.expenseList\n      .filter(item => item.isSelected)\n      .map(item => item.id);\n\n    expenseService\n      .deleteExpense(idList)\n      .then(resp => resp.json())\n      .then(data => {\n        expenseService\n          .getAllExpense()\n          .then(resp => resp.json())\n          .then(data => {\n            const modifiedData = this.addFlagToList(data);\n            this.setState({\n              expenseList: modifiedData,\n              quickSearchResult: modifiedData,\n              numSelectedRecords: 0\n            });\n          });\n      });\n  };\n\n  handleQuickSearch = quickSearchResult => {\n    this.setState({ quickSearchResult: quickSearchResult });\n  };\n\n  // add isSelected flag to each element of data list\n  addFlagToList = dataList => {\n    return dataList.map(item => {\n      item.isSelected = false;\n      return item;\n    });\n  };\n\n  // add isSelected flag to each element of data list\n  // addFlagToCategories = categoryList => {\n  //   return categoryList.map(item => {\n  //     item.isCategorySelected = false;\n  //     return item;\n  //   });\n  // };\n\n  handleFilterBegin = categories => {\n    this.setState({\n      isLoading: true\n      // categories: this.addFlagToCategories(categories)\n    });\n  };\n\n  handleFilterResult = filterResult => {\n    // add flags to filter result\n    const modifiedData = this.addFlagToList(filterResult);\n\n    // using filterd result to update expense list\n    this.setState({\n      expenseList: modifiedData,\n      quickSearchResult: modifiedData,\n      isLoading: false\n    });\n  };\n\n  handleAddNewRecord = newRecord => {\n    expenseService\n      .addNew(newRecord)\n      .then(resp => resp.json())\n      .then(addedRecord => {\n        // add flag to this new record obj\n        addedRecord.isSelected = false;\n        const list = this.state.expenseList;\n        list.push(addedRecord);\n\n        this.setState({ expenseList: list, quickSearchResult: list });\n      });\n  };\n\n  handleToggleSelect = isSelected => {\n    this.setState({\n      numSelectedRecords: isSelected\n        ? this.state.numSelectedRecords + 1\n        : this.state.numSelectedRecords - 1\n    });\n  };\n\n  // load data from sever after render\n  componentDidMount() {\n    expenseService\n      .getAllExpense()\n      .then(resp => resp.json())\n      .then(data => {\n        const modifiedData = this.addFlagToList(data);\n\n        this.setState({\n          expenseList: modifiedData,\n          quickSearchResult: modifiedData,\n          isLoading: false\n        });\n      });\n\n    expenseService\n      .getCategories()\n      .then(resp => resp.json())\n      .then(categories => {\n        this.setState({\n          categories: categories\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"main-page\">\n        <div className=\"nav\">\n          <User />\n          <Filter\n            onFilterResult={this.handleFilterResult}\n            onFilterBegin={this.handleFilterBegin}\n            categories={this.state.categories}\n          />\n          {/* <div className=\"summary-btn\"></div> */}\n          {/* <Logo /> */}\n        </div>\n\n        <div className=\"main\">\n          <ExpenseForm\n            onAddNewRecord={this.handleAddNewRecord}\n            categories={this.state.categories}\n          />\n          <div className=\"expense-list\">\n            <QuickSearch\n              data={this.state.expenseList}\n              onQuickSearch={this.handleQuickSearch}\n            />\n            <DeleteRecords\n              onDelete={this.handleDelete}\n              numSelectedRecords={this.state.numSelectedRecords}\n            />\n            <ExpenseList\n              data={this.state.quickSearchResult}\n              onToggleSelect={this.handleToggleSelect}\n              isLoading={this.state.isLoading}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport \"../Sass/components/_logo.scss\";\n\nclass Logo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"logo\">\n        <div></div>\n        <span dangerouslySetInnerHTML={{ __html: \"&copy; Copyright\" }} />\n      </div>\n    );\n  }\n}\n\nexport default Logo;\n","import React from \"react\";\nimport \"./App.scss\";\nimport \"./Sass/main.scss\";\nimport Login from \"./Components/Login\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport MainPage from \"./Components/MainPage\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        {/* <Header /> */}\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/expense\" component={MainPage} />\n        </Switch>\n        {/* <Footer /> */}\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}