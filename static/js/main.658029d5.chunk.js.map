{"version":3,"sources":["Components/Login.jsx","Components/Header.jsx","Components/Footer.jsx","Components/ExpenseList.jsx","Services/expenseService.js","Components/Filter.jsx","Components/ExpenseForm.jsx","Components/QuickSearch.jsx","Components/DeleteRecords.jsx","Components/User.jsx","Components/MainPage.jsx","Components/Logo.jsx","App.js","serviceWorker.js","index.js"],"names":["Login","state","username","password","error","handlePassChange","bind","handleUserChange","handleSubmit","dismissError","this","setState","evt","preventDefault","target","value","className","onSubmit","data-test","onClick","type","onChange","React","Component","Header","Footer","ExpenseList","props","handleSelected","id","numSelectedRecords","i","data","length","tmpData","isSelected","onToggleSelect","handleSort","sort","a","b","ascending","amount","itemA","description","toUpperCase","itemB","comparison","commentA","comments","commentB","categoryA","categoryName","categoryB","dateA","Date","dateTime","dateB","sortingColumn","storageKey","listJsx","map","item","dt","key","getFullYear","getMonth","getDate","icon","faCheckCircle","faCaretUp","baseUrl","expenseService","getAllExpense","fetch","getCategories","filterExpense","filterObj","method","headers","body","JSON","stringify","deleteExpense","idList","addNew","newRecord","Filter","handleApplyFilter","then","resp","json","filterResult","onApplyFilter","handleInputChange","e","startDate","endDate","minAmount","maxAmount","catigoryIDs","htmlFor","placeholder","ExpenseForm","onSubmitForm","r","Amount","Description","isError","CategoryName","document","getElementById","onAddNewRecord","reset","DateTime","Comments","Id","category","categories","console","log","categoryNames","ele","QuickSearch","onQuickSearch","userInput","quickSearchResult","filter","indexOf","toString","faSearch","onDelete","User","userName","MainPage","handleDelete","expenseList","modifiedData","addFlagToList","handleQuickSearch","dataList","handleFilterResult","handleAddNewRecord","addedRecord","list","push","handleToggleSelect","DeleteRecords","App","basename","path","process","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.658029d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../Sass/components/_login.scss';\r\n\r\nclass Login extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      error: \"\"\r\n    };\r\n\r\n    this.handlePassChange = this.handlePassChange.bind(this);\r\n    this.handleUserChange = this.handleUserChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.dismissError = this.dismissError.bind(this);\r\n  }\r\n\r\n  dismissError() {\r\n    this.setState({ error: \"\" });\r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    if (!this.state.username) {\r\n      return this.setState({ error: \"Username is required\" });\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      return this.setState({ error: \"Password is required\" });\r\n    }\r\n\r\n    return this.setState({ error: \"\" });\r\n  }\r\n\r\n  handleUserChange(evt) {\r\n    this.setState({\r\n      username: evt.target.value\r\n    });\r\n  }\r\n\r\n  handlePassChange(evt) {\r\n    this.setState({\r\n      password: evt.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.state.error && (\r\n            <h3 data-test=\"error\" onClick={this.dismissError}>\r\n              <button onClick={this.dismissError}>✖</button>\r\n              {this.state.error}\r\n            </h3>\r\n          )}\r\n          <label>User Name</label>\r\n          <input\r\n            type=\"text\"\r\n            data-test=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.handleUserChange}\r\n          />\r\n\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            data-test=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handlePassChange}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"Log In\" data-test=\"submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n//import './App.css';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n      return <div className='header'>\r\n          <h2>Daily Expense</h2>\r\n      </div>\r\n      ;\r\n    }\r\n  }\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n//import './App.css';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <h2>Footer</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n//import '../Sass/components/_ExpenseList.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ExpenseList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ascending: true,\r\n      data: [],\r\n      storageKey: \"expenseList\",\r\n      numSelectedRecords: 0,\r\n      sortingColumn: \"\"\r\n    };\r\n  }\r\n\r\n  // If 'data' from MainPage changes, this method is called, ExpenseList component gets updated.\r\n  static getDerivedStateFromProps(props, state) {\r\n    // debugger;\r\n    return { data: props.data };\r\n  }\r\n\r\n  // Toggle select rows\r\n  handleSelected = id => {\r\n    let numSelectedRecords = this.state.numSelectedRecords;\r\n\r\n    for (let i = 0; i < this.state.data.length; i++) {\r\n      if (id === this.state.data[i].id) {\r\n        let tmpData = this.state.data;\r\n\r\n        tmpData[i].isSelected = !tmpData[i].isSelected;\r\n        tmpData[i].isSelected ? numSelectedRecords++ : numSelectedRecords--;\r\n\r\n        this.setState({\r\n          numSelectedRecords: numSelectedRecords,\r\n          data: tmpData\r\n        });\r\n\r\n        this.props.onToggleSelect(numSelectedRecords);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Sort the data each column\r\n  handleSort = type => {\r\n    debugger;\r\n    const compareItem = (a, b) => {\r\n      const itemA = a.description.toUpperCase();\r\n      const itemB = b.description.toUpperCase();\r\n      // ** cannot compare 2 strings. this compare fn only return 0, 1, -1.\r\n      // return itemA>itemB?1:-1;\r\n      let comparison = 0;\r\n      if (itemA > itemB) {\r\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\r\n      } else if (itemA < itemB) {\r\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const compareAmount = (a, b) => {\r\n      return this.state.ascending ? a.amount - b.amount : b.amount - a.amount;\r\n    };\r\n\r\n    const compareComment = (a, b) => {\r\n      const commentA = a.comments.toUpperCase();\r\n      const commentB = b.comments.toUpperCase();\r\n      let comparison = 0;\r\n      if (commentA > commentB) {\r\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\r\n      } else if (commentA < commentB) {\r\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const compareCategory = (a, b) => {\r\n      const categoryA = a.categoryName.toUpperCase();\r\n      const categoryB = b.categoryName.toUpperCase();\r\n      let comparison = 0;\r\n      if (categoryA > categoryB) {\r\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\r\n      } else if (categoryA < categoryB) {\r\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const compareDate = (a, b) => {\r\n      const dateA = new Date(a.dateTime);\r\n      const dateB = new Date(b.dateTime);\r\n      let comparison = 0;\r\n      if (dateA > dateB) {\r\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\r\n      } else if (dateA < dateB) {\r\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    switch (type) {\r\n      case \"Amount\":\r\n        this.state.data.sort(compareAmount);\r\n        break;\r\n      case \"Item\":\r\n        this.state.data.sort(compareItem);\r\n        break;\r\n      case \"Comment\":\r\n        this.state.data.sort(compareComment);\r\n        break;\r\n      case \"Category\":\r\n        this.state.data.sort(compareCategory);\r\n        break;\r\n      case \"Date\":\r\n        this.state.data.sort(compareDate);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      sortingColumn: type,\r\n      ascending: !this.state.ascending\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let listJsx = this.state.data.map(item => {\r\n      let dt = new Date(item.dateTime);\r\n\r\n      return (\r\n        <tr key={item.id} onClick={() => this.handleSelected(item.id)}>\r\n          <td>{`${dt.getFullYear()}-${\r\n            dt.getMonth() > 9 ? \"\" : \"0\"\r\n          }${dt.getMonth() + 1}-${\r\n            dt.getDate() > 10 ? \"\" : \"0\"\r\n          }${dt.getDate()}`}</td>\r\n          <td>{item.description}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.categoryName}</td>\r\n          <td>{item.comments}</td>\r\n          {item.isSelected ? (\r\n            <td>\r\n              <FontAwesomeIcon icon={faCheckCircle} />\r\n            </td>\r\n          ) : (\r\n            <td></td>\r\n          )}\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"expense-list\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => this.handleSort(\"Date\")}>\r\n                Date{\" \"}\r\n                {this.state.sortingColumn === \"Date\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th onClick={() => this.handleSort(\"Item\")}>\r\n                Item{\" \"}\r\n                {this.state.sortingColumn === \"Item\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th onClick={() => this.handleSort(\"Amount\")}>\r\n                Amount{\" \"}\r\n                {this.state.sortingColumn === \"Amount\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th onClick={() => this.handleSort(\"Category\")}>\r\n                Category{\" \"}\r\n                {this.state.sortingColumn === \"Category\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th onClick={() => this.handleSort(\"Comment\")}>\r\n                Comment{\" \"}\r\n                {this.state.sortingColumn === \"Comment\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th className=\"Table-th\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{listJsx}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpenseList;\r\n","const baseUrl = 'https://lvaw1qhhfi.execute-api.us-east-1.amazonaws.com/Prod/api/';\r\n\r\nlet expenseService = {\r\n    getAllExpense: ()=> fetch(baseUrl + \"Expense\"),\r\n\r\n    getCategories: ()=> fetch(baseUrl + \"Expense/Categories\"),\r\n\r\n    filterExpense: (filterObj)=> fetch(baseUrl + \"Expense/filter\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(filterObj)\r\n      }),\r\n\r\n    deleteExpense: (idList)=> fetch(baseUrl + \"Expense/delete\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(idList)\r\n      }),\r\n\r\n    addNew: (newRecord) => fetch(baseUrl + \"Expense\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newRecord)\r\n      })\r\n}\r\n \r\nexport default expenseService;\r\n","import React from \"react\";\r\nimport expenseService from \"../Services/expenseService\";\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterObj: {\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        catigoryIDs: [],\r\n        minAmount: 0,\r\n        maxAmount: 99999\r\n      }\r\n    };\r\n  }\r\n\r\n  handleApplyFilter = () => {\r\n    // Call API to get filtered result(data) and update to table\r\n    // fetch(\"http://localhost:50204/api/Expense/filter\", {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(this.state.filterObj)\r\n    // })\r\n    expenseService\r\n      .filterExpense(this.state.filterObj)\r\n      .then(resp => resp.json())\r\n      .then(filterResult => {\r\n        this.props.onApplyFilter(filterResult);\r\n      });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    let filterObj = this.state.filterObj;\r\n    switch (e.target.id) {\r\n      case \"start-date\":\r\n        filterObj.startDate = e.target.value;\r\n        break;\r\n      case \"end-date\":\r\n        filterObj.endDate = e.target.value;\r\n        break;\r\n      case \"min-amount\":\r\n        filterObj.minAmount = e.target.value;\r\n        break;\r\n      case \"max-amount\":\r\n        filterObj.maxAmount = e.target.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"filter\">\r\n        {/* filter by date */}\r\n        <div className=\"filter-date-range\">\r\n          {/* <label htmlFor=\"start-date\">Filter By Date</label> */}\r\n          <div>\r\n            <label htmlFor=\"start-date\">From</label>\r\n            <input\r\n              id=\"start-date\"\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"start-date\">To</label>\r\n            <input\r\n              id=\"end-date\"\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* filter by category */}\r\n        <div className=\"filter-categories\">\r\n          {/* <label>Filter By Categories</label> */}\r\n          <div className=\"Groceries\">Groceries</div>\r\n          <div className=\"Education\">Education</div>\r\n          <div className=\"Insurance\">Insurance</div>\r\n          <div className=\"Petrol\">Petrol</div>\r\n          <div className=\"Others\">Others</div>\r\n        </div>\r\n\r\n        {/* filter by amount */}\r\n        <div className=\"filter-amount-range\">\r\n          {/* <label htmlFor=\"min-amount\">Filter By Amount</label> */}\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"$ min\"\r\n              id=\"min-amount\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <span>To</span>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"$ max\"\r\n              id=\"max-amount\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* filter btns */}\r\n        <div className=\"filter-btn\">\r\n          <input\r\n            type=\"button\"\r\n            value=\"Apply Filter\"\r\n            className=\"btn-apply-filter\"\r\n            onClick={this.handleApplyFilter}\r\n          />\r\n          <input\r\n            type=\"reset\"\r\n            value=\"Reset Filter\"\r\n            className=\"btn-reset-filter\"\r\n            onClick={this.handleApplyFilter}\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport \"../Sass/components/_expense-form.scss\";\r\nimport expenseService from \"../Services/expenseService\";\r\n\r\nclass ExpenseForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newRecord: {\r\n        Id: 0,\r\n        DateTime: \"\",\r\n        Description: \"\",\r\n        Amount: \"\",\r\n        CategoryName: \"\",\r\n        Comments: \"\"\r\n      },\r\n      category: [],\r\n      isError: false\r\n    };\r\n  }\r\n\r\n  onSubmitForm = () => {\r\n    const r = this.state.newRecord;\r\n    if (\r\n      r.Amount === \"\" ||\r\n      r.Description === \"\"\r\n      // r.DateTime === \"\" ||\r\n      // r.CategoryName === \"\"\r\n    ) {\r\n      this.setState({ isError: true });\r\n    } else {\r\n      r.CategoryName = document.getElementById(\"category\").value;\r\n      this.setState({ newRecord: r });\r\n\r\n      // update newRecord to MainPage\r\n      this.props.onAddNewRecord(this.state.newRecord);\r\n\r\n      // clear inputs once 'Submit' button is clicked\r\n      document.getElementById(\"expense-form\").reset();\r\n    }\r\n  };\r\n\r\n  // get value of new record using onChange fn\r\n  handleInputChange = e => {\r\n    const newRecord = this.state.newRecord;\r\n\r\n    if (e.target.id === \"date\") {\r\n      newRecord.DateTime = e.target.value;\r\n    } else if (e.target.id === \"category\") {\r\n      newRecord.CategoryName = e.target.value;\r\n    } else if (e.target.id === \"item-name\") {\r\n      newRecord.Description = e.target.value;\r\n    } else if (e.target.id === \"amount\") {\r\n      newRecord.Amount = e.target.value;\r\n    } else if (e.target.id === \"comments\") {\r\n      newRecord.Comments = e.target.value;\r\n    }\r\n\r\n    this.setState({ newRecord: newRecord });\r\n  };\r\n\r\n  // get categories obj list from sever, includs 'id' & 'categoryName'\r\n  componentDidMount() {\r\n    // fetch(\"http://localhost:50204/api/Expense/Categories\")\r\n    expenseService\r\n      .getCategories()\r\n      .then(resp => resp.json())\r\n      .then(categories => {\r\n        this.setState({\r\n          category: categories\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // debugger;\r\n    console.log(\"render\");\r\n    // Form Category options\r\n    const categoryNames = this.state.category.map(ele => {\r\n      return <option>{ele.categoryName}</option>;\r\n    });\r\n\r\n    // Form\r\n    return (\r\n      <div className=\"expense-form\">\r\n        <form id=\"expense-form\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"date\"\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <select\r\n              id=\"category\"\r\n              className=\"form-control\"\r\n              onChange={this.handleInputChange}\r\n            >\r\n              {categoryNames}\r\n              {/* hard code of categories*/}\r\n              {/* <option value=\"Grocery\">Grocery</option>\r\n              <option>Petrol</option>\r\n              <option>Education</option>\r\n              <option>Insurance</option>\r\n              <option>Others</option> */}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"item-name\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Item Name\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"amount\"\r\n              className=\"form-control\"\r\n              type=\"number\"\r\n              placeholder=\"Amount\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"comments\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Comments\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          {/* Alert when submit without input */}\r\n          {/* {alertDiv} */}\r\n          <div>\r\n            <input\r\n              className=\"btn-add-expense\"\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              onClick={this.onSubmitForm}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport \"../Sass/components/_quick-search.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass QuickSearch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  // If 'data' from MainPage changes, this method is called.\r\n  static getDerivedStateFromProps(props, state) {\r\n    return { data: props.data };\r\n  }\r\n\r\n  // Quick search\r\n  onQuickSearch = e => {\r\n    debugger;\r\n    var userInput = e.target.value.toUpperCase();\r\n    const filterFn = item =>\r\n      item.description.toUpperCase().indexOf(userInput) >= 0 ||\r\n      item.amount.toString().indexOf(userInput) >= 0 ||\r\n      item.categoryName.toUpperCase().indexOf(userInput) >= 0;\r\n\r\n    let quickSearchResult = this.state.data.filter(filterFn);\r\n\r\n    this.props.onQuickSearch(quickSearchResult);\r\n    console.log(\"search done\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"quick-search\">\r\n        <input type=\"text\" onChange={e => this.onQuickSearch(e)} />\r\n        <FontAwesomeIcon icon={faSearch} className=\"search-icon\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickSearch;\r\n","import React from \"react\";\r\n//import \"../Sass/components/_delete-records.scss\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numSelectedRecords: 0\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return { numSelectedRecords: props.numSelectedRecords };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"delete-records\">\r\n        <input\r\n          type=\"button\"\r\n          onClick={this.props.onDelete}\r\n          // ES6 string\r\n          value={`Delete ${this.state.numSelectedRecords} Records`}\r\n          // disabled={this.state.numSelectedRecords === 0}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"../Sass/components/_user.scss\";\r\n\r\nclass User extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"Rui\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user\">\r\n        <div className=\"user-avatar\"></div>\r\n        <h2>Hello, Rui</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport Filter from \"./Filter\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport QuickSearch from \"./QuickSearch\";\r\nimport DeleteRecords from \"./DeleteRecords\";\r\nimport expenseService from \"../Services/expenseService\";\r\nimport User from \"./User\";\r\nimport Logo from \"./Logo\";\r\nimport \"../Sass/main.scss\";\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expenseList: [],\r\n      quickSearchResult: [],\r\n      numSelectedRecords: 0\r\n    };\r\n  }\r\n\r\n  // delete all records that marked as \"selected\"\r\n  handleDelete = () => {\r\n    // Find element ids\r\n    const idList = this.state.expenseList\r\n      .filter(item => item.isSelected)\r\n      .map(item => item.id);\r\n\r\n    // Post the new array which includs all selected elements' ids to sever\r\n    // Then reload data from sever\r\n    // fetch(\"http://localhost:50204/api/Expense/delete\", {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(idList)\r\n    // })\r\n    expenseService\r\n      .deleteExpense(idList)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        // fetch(\"http://localhost:50204/api/Expense\")\r\n        expenseService\r\n          .getAllExpense()\r\n          .then(resp => resp.json())\r\n          .then(data => {\r\n            const modifiedData = this.addFlagToList(data);\r\n            this.setState({\r\n              expenseList: modifiedData,\r\n              quickSearchResult: modifiedData\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  handleQuickSearch = quickSearchResult => {\r\n    this.setState({ quickSearchResult: quickSearchResult });\r\n  };\r\n\r\n  // add isSelected flag to each element of data list\r\n  addFlagToList = dataList => {\r\n    return dataList.map(item => {\r\n      item.isSelected = false;\r\n      return item;\r\n    });\r\n  };\r\n\r\n  handleFilterResult = filterResult => {\r\n    // add flags to filter result\r\n    const modifiedData = this.addFlagToList(filterResult);\r\n\r\n    // using filterd result to update expense list\r\n    this.setState({\r\n      expenseList: modifiedData,\r\n      quickSearchResult: modifiedData\r\n    });\r\n  };\r\n\r\n  handleAddNewRecord = newRecord => {\r\n    // debugger;\r\n    // Call API to post new record to server and update to table\r\n    // fetch(\"http://localhost:50204/api/Expense\", {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(newRecord)\r\n    // })\r\n    expenseService\r\n      .addNew(newRecord)\r\n      .then(resp => resp.json())\r\n      .then(addedRecord => {\r\n        // add flag to this new record obj\r\n        addedRecord.isSelected = false;\r\n        const list = this.state.expenseList;\r\n        list.push(addedRecord);\r\n\r\n        this.setState({ expenseList: list, quickSearchResult: list });\r\n      });\r\n  };\r\n\r\n  handleToggleSelect = numSelectedRecords => {\r\n    this.setState({ numSelectedRecords: numSelectedRecords });\r\n  };\r\n\r\n  // load data from sever after render\r\n  componentDidMount() {\r\n    //fetch(\"http://localhost:50204/api/Expense\")\r\n    expenseService\r\n      .getAllExpense()\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        const modifiedData = this.addFlagToList(data);\r\n\r\n        this.setState({\r\n          expenseList: modifiedData,\r\n          quickSearchResult: modifiedData\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-page\">\r\n        <div className=\"nav\">\r\n          <User />\r\n          <Filter onApplyFilter={this.handleFilterResult} />\r\n          {/* <div className=\"summary-btn\"></div> */}\r\n          {/* <Logo /> */}\r\n        </div>\r\n\r\n        <div className=\"main\">\r\n          <ExpenseForm onAddNewRecord={this.handleAddNewRecord} />\r\n          <div>\r\n            <QuickSearch\r\n              data={this.state.expenseList}\r\n              onQuickSearch={this.handleQuickSearch}\r\n            />\r\n            <div className=\"btn\">\r\n              <input type=\"button\" value=\"Edit\" />\r\n              <DeleteRecords\r\n                onDelete={this.handleDelete}\r\n                numSelectedRecords={this.state.numSelectedRecords}\r\n              />\r\n            </div>\r\n          </div>\r\n          <ExpenseList\r\n            data={this.state.quickSearchResult}\r\n            onToggleSelect={this.handleToggleSelect}\r\n          />\r\n        </div>\r\n\r\n        {/* <div>\r\n          <QuickSearch\r\n            data={this.state.expenseList}\r\n            onQuickSearch={this.handleQuickSearch}\r\n          />\r\n          <Filter onApplyFilter={this.handleFilterResult} />\r\n        </div>\r\n\r\n        <div>\r\n          <ExpenseForm onAddNewRecord={this.handleAddNewRecord} />\r\n          <DeleteRecords\r\n            onDelete={this.handleDelete}\r\n            numSelectedRecords={this.state.numSelectedRecords}\r\n          />\r\n          <ExpenseList\r\n            data={this.state.quickSearchResult}\r\n            onToggleSelect={this.handleToggleSelect}\r\n          />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport \"../Sass/components/_logo.scss\";\r\n\r\nclass Logo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"logo\">\r\n        <div></div>\r\n        <span dangerouslySetInnerHTML={{ __html: \"&copy; Copyright\" }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport \"./Sass/main.scss\";\r\nimport Login from \"./Components/Login\";\r\nimport Header from \"./Components/Header\";\r\nimport Footer from \"./Components/Footer\";\r\nimport MainPage from \"./Components/MainPage\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"DailyExpense2\">\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path={process.env.PUBLIC_URL + \"/\"} exact component={Login} />\r\n          <Route\r\n            path={process.env.PUBLIC_URL + \"/expense\"}\r\n            component={MainPage}\r\n          />\r\n        </Switch>\r\n        <Footer />\r\n        {/* <MainPage /> */}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}