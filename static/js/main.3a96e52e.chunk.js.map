{"version":3,"sources":["Images/Avatar-01.svg","Components/Login.jsx","Components/Header.jsx","Components/Footer.jsx","Components/ExpenseList.jsx","Services/expenseService.js","Components/Filter.jsx","Components/ExpenseForm.jsx","Components/QuickSearch.jsx","Components/DeleteRecords.jsx","Components/User.jsx","Components/MainPage.jsx","Components/Logo.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","state","username","password","error","redirect","handlePassChange","bind","handleUserChange","handleSubmit","dismissError","this","setState","evt","preventDefault","target","id","value","to","className","onSubmit","data-test","onClick","htmlFor","type","onChange","React","Component","ExpenseList","props","handleSelected","numSelectedRecords","i","data","length","tmpData","isSelected","onToggleSelect","handleSort","sort","a","b","ascending","amount","itemA","description","toUpperCase","itemB","comparison","commentA","comments","commentB","categoryA","categoryName","categoryB","dateA","Date","dateTime","dateB","sortingColumn","storageKey","listJsx","map","item","dt","key","getFullYear","getMonth","getDate","icon","faCheckCircle","loadingRow","colSpan","faSpinner","faCaretUp","isLoading","baseUrl","expenseService","getAllExpense","fetch","getCategories","filterExpense","filterObj","method","headers","body","JSON","stringify","deleteExpense","idList","addNew","newRecord","Filter","handleApplyFilter","onFilterBegin","then","resp","json","filterResult","onFilterResult","handleResetFilter","startDate","endDate","catigoryIDs","minAmount","maxAmount","setTimeout","handleInputChange","e","placeholder","ExpenseForm","onSubmitForm","r","Amount","Description","isError","CategoryName","document","getElementById","onAddNewRecord","reset","DateTime","Comments","Id","category","categories","console","log","categoryNames","ele","QuickSearch","onQuickSearch","userInput","quickSearchResult","filter","indexOf","toString","faSearch","onDelete","User","userName","src","Avatar","alt","MainPage","handleDelete","expenseList","modifiedData","addFlagToList","handleQuickSearch","dataList","handleFilterBegin","handleFilterResult","handleAddNewRecord","addedRecord","list","push","handleToggleSelect","DeleteRecords","App","basename","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a96e52e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Avatar-01.5a2627ab.svg\";","import React from \"react\";\r\nimport '../Sass/components/_login.scss';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"sample_user\",\r\n      password: \"1234567\",\r\n      error: \"\",\r\n      redirect: \"\"\r\n    };\r\n\r\n    this.handlePassChange = this.handlePassChange.bind(this);\r\n    this.handleUserChange = this.handleUserChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.dismissError = this.dismissError.bind(this);\r\n  }\r\n\r\n  dismissError() {\r\n    this.setState({ error: \"\" });\r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    if (!this.state.username) {\r\n      return this.setState({ error: \"Username is required\" });\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      return this.setState({ error: \"Password is required\" });\r\n    }\r\n\r\n    return this.setState({ error: \"\" , redirect: \"/expense\"});\r\n  }\r\n\r\n  handleUserChange(evt) {\r\n\r\n    switch (evt.target.id) {\r\n      case \"username\":\r\n        this.setState({\r\n          username: evt.target.value\r\n        });\r\n        break;\r\n\r\n      case \"password\":\r\n        this.setState({\r\n          password: evt.target.value\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  handlePassChange(evt) {\r\n    this.setState({\r\n      password: evt.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"login\">\r\n          <div id=\"form-container\">\r\n            <form id=\"login-form\" onSubmit={this.handleSubmit}>\r\n              {this.state.error && (\r\n                <h3 data-test=\"error\" onClick={this.dismissError}>\r\n                  <button onClick={this.dismissError}>✖</button>\r\n                  {this.state.error}\r\n                </h3>\r\n              )}\r\n              <div>\r\n                <label htmlFor=\"username\">User Name</label>\r\n                <input\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  data-test=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleUserChange}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  data-test=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handlePassChange}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <input type=\"submit\" className=\"btn-login\" value=\"Login\" data-test=\"submit\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n//import './App.css';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n      return <div className='header'>\r\n          <h2>Daily Expense</h2>\r\n      </div>\r\n      ;\r\n    }\r\n  }\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n//import './App.css';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <h2>Footer</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n//import '../Sass/components/_ExpenseList.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faCaretUp,\r\n  faSpinner\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ExpenseList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ascending: true,\r\n      data: [],\r\n      storageKey: \"expenseList\",\r\n      numSelectedRecords: 0,\r\n      sortingColumn: \"\"\r\n    };\r\n  }\r\n\r\n  // If 'data' from MainPage changes, this method is called, ExpenseList component gets updated.\r\n  static getDerivedStateFromProps(props, state) {\r\n    // debugger;\r\n    return { data: props.data };\r\n  }\r\n\r\n  // Toggle select rows\r\n  handleSelected = id => {\r\n    let numSelectedRecords = this.state.numSelectedRecords;\r\n\r\n    for (let i = 0; i < this.state.data.length; i++) {\r\n      if (id === this.state.data[i].id) {\r\n        let tmpData = this.state.data;\r\n\r\n        tmpData[i].isSelected = !tmpData[i].isSelected;\r\n        tmpData[i].isSelected ? numSelectedRecords++ : numSelectedRecords--;\r\n\r\n        this.setState({\r\n          numSelectedRecords: numSelectedRecords,\r\n          data: tmpData\r\n        });\r\n\r\n        this.props.onToggleSelect(numSelectedRecords);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Sort the data each column\r\n  handleSort = type => {\r\n    // debugger;\r\n    const compareItem = (a, b) => {\r\n      const itemA = a.description.toUpperCase();\r\n      const itemB = b.description.toUpperCase();\r\n      // ** cannot compare 2 strings. this compare fn only return 0, 1, -1.\r\n      // return itemA>itemB?1:-1;\r\n      let comparison = 0;\r\n      if (itemA > itemB) {\r\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\r\n      } else if (itemA < itemB) {\r\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const compareAmount = (a, b) => {\r\n      return this.state.ascending ? a.amount - b.amount : b.amount - a.amount;\r\n    };\r\n\r\n    const compareComment = (a, b) => {\r\n      const commentA = a.comments.toUpperCase();\r\n      const commentB = b.comments.toUpperCase();\r\n      let comparison = 0;\r\n      if (commentA > commentB) {\r\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\r\n      } else if (commentA < commentB) {\r\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const compareCategory = (a, b) => {\r\n      const categoryA = a.categoryName.toUpperCase();\r\n      const categoryB = b.categoryName.toUpperCase();\r\n      let comparison = 0;\r\n      if (categoryA > categoryB) {\r\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\r\n      } else if (categoryA < categoryB) {\r\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const compareDate = (a, b) => {\r\n      const dateA = new Date(a.dateTime);\r\n      const dateB = new Date(b.dateTime);\r\n      let comparison = 0;\r\n      if (dateA > dateB) {\r\n        this.state.ascending ? (comparison = 1) : (comparison = -1);\r\n      } else if (dateA < dateB) {\r\n        this.state.ascending ? (comparison = -1) : (comparison = 1);\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    switch (type) {\r\n      case \"Amount\":\r\n        this.state.data.sort(compareAmount);\r\n        break;\r\n      case \"Item\":\r\n        this.state.data.sort(compareItem);\r\n        break;\r\n      case \"Comment\":\r\n        this.state.data.sort(compareComment);\r\n        break;\r\n      case \"Category\":\r\n        this.state.data.sort(compareCategory);\r\n        break;\r\n      case \"Date\":\r\n        this.state.data.sort(compareDate);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      sortingColumn: type,\r\n      ascending: !this.state.ascending\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let listJsx = this.state.data.map(item => {\r\n      let dt = new Date(item.dateTime);\r\n\r\n      return (\r\n        <tr key={item.id} onClick={() => this.handleSelected(item.id)}>\r\n          <td>{`${dt.getFullYear()}-${\r\n            dt.getMonth() > 9 ? \"\" : \"0\"\r\n          }${dt.getMonth() + 1}-${\r\n            dt.getDate() > 10 ? \"\" : \"0\"\r\n          }${dt.getDate()}`}</td>\r\n          <td>{item.description}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.categoryName}</td>\r\n          <td>{item.comments}</td>\r\n          {item.isSelected ? (\r\n            <td>\r\n              <FontAwesomeIcon icon={faCheckCircle} />\r\n            </td>\r\n          ) : (\r\n            <td></td>\r\n          )}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    let loadingRow = (\r\n      <tr>\r\n        <td colSpan=\"6\" className=\"loading\">\r\n          <FontAwesomeIcon\r\n            className=\"faSpinner fa-spin fa-2x\"\r\n            icon={faSpinner}\r\n          />\r\n        </td>\r\n      </tr>\r\n    );\r\n    return (\r\n      <div className=\"expense-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"left-th\" onClick={() => this.handleSort(\"Date\")}>\r\n                Date{\" \"}\r\n                {this.state.sortingColumn === \"Date\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th onClick={() => this.handleSort(\"Item\")}>\r\n                Item{\" \"}\r\n                {this.state.sortingColumn === \"Item\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th onClick={() => this.handleSort(\"Amount\")}>\r\n                Amount{\" \"}\r\n                {this.state.sortingColumn === \"Amount\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th onClick={() => this.handleSort(\"Category\")}>\r\n                Category{\" \"}\r\n                {this.state.sortingColumn === \"Category\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th onClick={() => this.handleSort(\"Comment\")}>\r\n                Comment{\" \"}\r\n                {this.state.sortingColumn === \"Comment\" &&\r\n                  (this.state.ascending ? (\r\n                    <FontAwesomeIcon icon={faCaretUp} />\r\n                  ) : (\r\n                    <FontAwesomeIcon className=\"faCaretDown\" icon={faCaretUp} />\r\n                  ))}\r\n              </th>\r\n              <th className=\"Table-th right-th\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {!this.props.isLoading ? listJsx : loadingRow}\r\n            <tr>\r\n              <td colSpan=\"6\" className=\"table-footer\"></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpenseList;\r\n","const baseUrl = 'https://lvaw1qhhfi.execute-api.us-east-1.amazonaws.com/Prod/api/';\r\n\r\nlet expenseService = {\r\n    getAllExpense: ()=> fetch(baseUrl + \"Expense\"),\r\n\r\n    getCategories: ()=> fetch(baseUrl + \"Expense/Categories\"),\r\n\r\n    filterExpense: (filterObj)=> fetch(baseUrl + \"Expense/filter\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(filterObj)\r\n      }),\r\n\r\n    deleteExpense: (idList)=> fetch(baseUrl + \"Expense/delete\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(idList)\r\n      }),\r\n\r\n    addNew: (newRecord) => fetch(baseUrl + \"Expense\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newRecord)\r\n      })\r\n}\r\n \r\nexport default expenseService;\r\n","import React from \"react\";\r\nimport expenseService from \"../Services/expenseService\";\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterObj: {\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        catigoryIDs: [],\r\n        minAmount: 0,\r\n        maxAmount: 99999\r\n      }\r\n    };\r\n  }\r\n\r\n  handleApplyFilter = () => {\r\n    // to inform the main page start to spin\r\n    this.props.onFilterBegin();\r\n\r\n    expenseService\r\n      .filterExpense(this.state.filterObj)\r\n      .then(resp => resp.json())\r\n      .then(filterResult => {\r\n        this.props.onFilterResult(filterResult);\r\n      });\r\n  };\r\n\r\n  handleResetFilter = () => {\r\n    this.setState({\r\n      filterObj: {\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        catigoryIDs: [],\r\n        minAmount: 0,\r\n        maxAmount: 99999\r\n      }\r\n    });\r\n    setTimeout(() => {\r\n      this.handleApplyFilter();\r\n    }, 0);   \r\n  };\r\n\r\n  handleInputChange = e => {\r\n    let filterObj = this.state.filterObj;\r\n    switch (e.target.id) {\r\n      case \"start-date\":\r\n        filterObj.startDate = e.target.value;\r\n        break;\r\n      case \"end-date\":\r\n        filterObj.endDate = e.target.value;\r\n        break;\r\n      case \"min-amount\":\r\n        filterObj.minAmount = e.target.value;\r\n        break;\r\n      case \"max-amount\":\r\n        filterObj.maxAmount = e.target.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"filter\">\r\n        {/* filter by date */}\r\n        <div className=\"filter-date-range\">\r\n          {/* <label htmlFor=\"start-date\">Filter By Date</label> */}\r\n          <label htmlFor=\"start-date\">From</label>\r\n          <input\r\n            id=\"start-date\"\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <label htmlFor=\"start-date\">To</label>\r\n          <input\r\n            id=\"end-date\"\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        {/* filter by category */}\r\n        <div className=\"filter-categories\">\r\n          {/* <label>Filter By Categories</label> */}\r\n          <div className=\"Groceries\">Groceries</div>\r\n          <div className=\"Education\">Education</div>\r\n          <div className=\"Insurance\">Insurance</div>\r\n          <div className=\"Petrol\">Petrol</div>\r\n          <div className=\"Others\">Others</div>\r\n        </div>\r\n\r\n        {/* filter by amount */}\r\n        <div className=\"filter-amount-range\">\r\n          {/* <label htmlFor=\"min-amount\">Filter By Amount</label> */}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"$ min\"\r\n            id=\"min-amount\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <span>To</span>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"$ max\"\r\n            id=\"max-amount\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        {/* filter btns */}\r\n        <div className=\"filter-btn\">\r\n          <input\r\n            type=\"reset\"\r\n            value=\"Reset Filter\"\r\n            className=\"btn-reset-filter\"\r\n            onClick={this.handleResetFilter}\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Apply Filter\"\r\n            className=\"btn-apply-filter\"\r\n            onClick={this.handleApplyFilter}\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport \"../Sass/components/_expense-form.scss\";\r\nimport expenseService from \"../Services/expenseService\";\r\n\r\nclass ExpenseForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newRecord: {\r\n        Id: 0,\r\n        DateTime: \"\",\r\n        Description: \"\",\r\n        Amount: \"\",\r\n        CategoryName: \"\",\r\n        Comments: \"\"\r\n      },\r\n      category: [],\r\n      isError: false\r\n    };\r\n  }\r\n\r\n  onSubmitForm = () => {\r\n    const r = this.state.newRecord;\r\n    if (\r\n      r.Amount === \"\" ||\r\n      r.Description === \"\"\r\n      // r.DateTime === \"\" ||\r\n      // r.CategoryName === \"\"\r\n    ) {\r\n      this.setState({ isError: true });\r\n    } else {\r\n      r.CategoryName = document.getElementById(\"category\").value;\r\n      this.setState({ newRecord: r });\r\n\r\n      // update newRecord to MainPage\r\n      this.props.onAddNewRecord(this.state.newRecord);\r\n\r\n      // clear inputs once 'Submit' button is clicked\r\n      document.getElementById(\"expense-form\").reset();\r\n    }\r\n  };\r\n\r\n  // get value of new record using onChange fn\r\n  handleInputChange = e => {\r\n    const newRecord = this.state.newRecord;\r\n\r\n    if (e.target.id === \"date\") {\r\n      newRecord.DateTime = e.target.value;\r\n    } else if (e.target.id === \"category\") {\r\n      newRecord.CategoryName = e.target.value;\r\n    } else if (e.target.id === \"item-name\") {\r\n      newRecord.Description = e.target.value;\r\n    } else if (e.target.id === \"amount\") {\r\n      newRecord.Amount = e.target.value;\r\n    } else if (e.target.id === \"comments\") {\r\n      newRecord.Comments = e.target.value;\r\n    }\r\n\r\n    this.setState({ newRecord: newRecord });\r\n  };\r\n\r\n  // get categories obj list from sever, includs 'id' & 'categoryName'\r\n  componentDidMount() {\r\n    // fetch(\"http://localhost:50204/api/Expense/Categories\")\r\n    expenseService\r\n      .getCategories()\r\n      .then(resp => resp.json())\r\n      .then(categories => {\r\n        this.setState({\r\n          category: categories\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // debugger;\r\n    console.log(\"render\");\r\n    // Form Category options\r\n    const categoryNames = this.state.category.map(ele => {\r\n      return <option>{ele.categoryName}</option>;\r\n    });\r\n\r\n    // Form\r\n    return (\r\n      <div className=\"expense-form\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"date\"\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <select\r\n              id=\"category\"\r\n              className=\"form-control\"\r\n              onChange={this.handleInputChange}\r\n            >\r\n              {categoryNames}\r\n              {/* hard code of categories*/}\r\n              {/* <option value=\"Grocery\">Grocery</option>\r\n              <option>Petrol</option>\r\n              <option>Education</option>\r\n              <option>Insurance</option>\r\n              <option>Others</option> */}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"item-name\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Item Name\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"amount\"\r\n              className=\"form-control\"\r\n              type=\"number\"\r\n              placeholder=\"Amount\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"comments\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Comments\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          {/* Alert when submit without input */}\r\n          {/* {alertDiv} */}\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"btn-add-expense\"\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              onClick={this.onSubmitForm}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport \"../Sass/components/_quick-search.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass QuickSearch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n\r\n  // If 'data' from MainPage changes, this method is called.\r\n  static getDerivedStateFromProps(props, state) {\r\n    return { data: props.data };\r\n  }\r\n\r\n  // Quick search\r\n  onQuickSearch = e => {\r\n    debugger;\r\n    var userInput = e.target.value.toUpperCase();\r\n    const filterFn = item =>\r\n      item.description.toUpperCase().indexOf(userInput) >= 0 ||\r\n      item.amount.toString().indexOf(userInput) >= 0 ||\r\n      item.categoryName.toUpperCase().indexOf(userInput) >= 0;\r\n\r\n    let quickSearchResult = this.state.data.filter(filterFn);\r\n\r\n    this.props.onQuickSearch(quickSearchResult);\r\n    console.log(\"search done\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"quick-search\">\r\n        <FontAwesomeIcon icon={faSearch} className=\"search-icon\" />\r\n        <input type=\"text\" onChange={e => this.onQuickSearch(e)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickSearch;\r\n","import React from \"react\";\r\nimport \"../Sass/components/_delete-records.scss\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numSelectedRecords: 0\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return { numSelectedRecords: props.numSelectedRecords };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"delete-records\">\r\n        <input\r\n          type=\"button\"\r\n          onClick={this.props.onDelete}\r\n          // ES6 string\r\n          value={`Delete ${this.state.numSelectedRecords} Records`}\r\n          // disabled={this.state.numSelectedRecords === 0}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"../Sass/components/_user.scss\";\r\nimport Avatar from \"../Images/Avatar-01.svg\";\r\n\r\nclass User extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"Rui\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user\">\r\n        {/* <div className=\"user-avatar\"></div> */}\r\n        <img src={Avatar} alt=\"user-avatar\" />\r\n        <h2>Hello, Rui</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport Filter from \"./Filter\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport QuickSearch from \"./QuickSearch\";\r\nimport DeleteRecords from \"./DeleteRecords\";\r\nimport expenseService from \"../Services/expenseService\";\r\nimport User from \"./User\";\r\nimport Logo from \"./Logo\";\r\nimport \"../Sass/main.scss\";\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expenseList: [],\r\n      quickSearchResult: [],\r\n      numSelectedRecords: 0,\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  // delete all records that marked as \"selected\"\r\n  handleDelete = () => {\r\n    // Find element ids\r\n    const idList = this.state.expenseList\r\n      .filter(item => item.isSelected)\r\n      .map(item => item.id);\r\n\r\n    // Post the new array which includs all selected elements' ids to sever\r\n    // Then reload data from sever\r\n    // fetch(\"http://localhost:50204/api/Expense/delete\", {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(idList)\r\n    // })\r\n    expenseService\r\n      .deleteExpense(idList)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        // fetch(\"http://localhost:50204/api/Expense\")\r\n        expenseService\r\n          .getAllExpense()\r\n          .then(resp => resp.json())\r\n          .then(data => {\r\n            const modifiedData = this.addFlagToList(data);\r\n            this.setState({\r\n              expenseList: modifiedData,\r\n              quickSearchResult: modifiedData\r\n            });\r\n          });\r\n      });\r\n  };\r\n\r\n  handleQuickSearch = quickSearchResult => {\r\n    this.setState({ quickSearchResult: quickSearchResult });\r\n  };\r\n\r\n  // add isSelected flag to each element of data list\r\n  addFlagToList = dataList => {\r\n    return dataList.map(item => {\r\n      item.isSelected = false;\r\n      return item;\r\n    });\r\n  };\r\n\r\n  handleFilterBegin = () => {\r\n    this.setState({isLoading: true});\r\n  }\r\n\r\n  handleFilterResult = filterResult => {\r\n    // add flags to filter result\r\n    const modifiedData = this.addFlagToList(filterResult);\r\n\r\n    // using filterd result to update expense list\r\n    this.setState({\r\n      expenseList: modifiedData,\r\n      quickSearchResult: modifiedData,\r\n      isLoading: false\r\n    });\r\n  };\r\n\r\n  handleAddNewRecord = newRecord => {\r\n    expenseService\r\n      .addNew(newRecord)\r\n      .then(resp => resp.json())\r\n      .then(addedRecord => {\r\n        // add flag to this new record obj\r\n        addedRecord.isSelected = false;\r\n        const list = this.state.expenseList;\r\n        list.push(addedRecord);\r\n\r\n        this.setState({ expenseList: list, quickSearchResult: list });\r\n      });\r\n  };\r\n\r\n  handleToggleSelect = numSelectedRecords => {\r\n    this.setState({ numSelectedRecords: numSelectedRecords });\r\n  };\r\n\r\n  // load data from sever after render\r\n  componentDidMount() {\r\n    expenseService\r\n      .getAllExpense()\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        const modifiedData = this.addFlagToList(data);\r\n\r\n        this.setState({\r\n          expenseList: modifiedData,\r\n          quickSearchResult: modifiedData,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-page\">\r\n        <div className=\"nav\">\r\n          <User />\r\n          <Filter onFilterResult={this.handleFilterResult} onFilterBegin={this.handleFilterBegin} />\r\n          {/* <div className=\"summary-btn\"></div> */}\r\n          {/* <Logo /> */}\r\n        </div>\r\n\r\n        <div className=\"main\">\r\n          <ExpenseForm onAddNewRecord={this.handleAddNewRecord} />\r\n          <div className=\"expense-list\">\r\n            <QuickSearch\r\n              data={this.state.expenseList}\r\n              onQuickSearch={this.handleQuickSearch}\r\n            />\r\n            <DeleteRecords\r\n              onDelete={this.handleDelete}\r\n              numSelectedRecords={this.state.numSelectedRecords}\r\n            />\r\n            <ExpenseList\r\n              data={this.state.quickSearchResult}\r\n              onToggleSelect={this.handleToggleSelect}\r\n              isLoading={this.state.isLoading}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport \"../Sass/components/_logo.scss\";\r\n\r\nclass Logo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"logo\">\r\n        <div></div>\r\n        <span dangerouslySetInnerHTML={{ __html: \"&copy; Copyright\" }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport \"./Sass/main.scss\";\r\nimport Login from \"./Components/Login\";\r\nimport Header from \"./Components/Header\";\r\nimport Footer from \"./Components/Footer\";\r\nimport MainPage from \"./Components/MainPage\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <div className=\"App\">\r\n        {/* <Header /> */}\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/expense\" component={MainPage} />\r\n        </Switch>\r\n        {/* <Footer /> */}\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}